-- 1. В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. 
-- Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

-- Что имеем перед началом
SELECT id, name, birthday_at, created_at, updated_at FROM shop2.users;
-- Результат
id|name     |birthday_at|created_at         |updated_at         |
--|---------|-----------|-------------------|-------------------|
 1|Геннадий | 1990-10-05|2021-03-10 19:13:38|2021-03-10 19:13:38|
 2|Наталья  | 1984-11-12|2021-03-10 19:13:38|2021-03-10 19:13:38|
 3|Александр| 1985-05-20|2021-03-10 19:13:38|2021-03-10 19:13:38|
 4|Сергей   | 1988-02-14|2021-03-10 19:13:38|2021-03-10 19:13:38|
 5|Иван     | 1998-01-12|2021-03-10 19:13:38|2021-03-10 19:13:38|
 6|Мария    | 1992-08-29|2021-03-10 19:13:38|2021-03-10 19:13:38|

SELECT id, name, birthday_at, created_at, updated_at FROM sample.users;
-- Результат
id|name|birthday_at|created_at|updated_at|
--|----|-----------|----------|----------|

-- Выполняем задание

START TRANSACTION;
INSERT INTO sample.users SELECT id, name, birthday_at, created_at, updated_at FROM shop.users WHERE id = 1;
DELETE FROM shop2.users WHERE id = 1 LIMIT 1;
COMMIT;

-- Проверяем себя
SELECT id, name, birthday_at, created_at, updated_at FROM shop2.users;
-- Результат
id|name     |birthday_at|created_at         |updated_at         |
--|---------|-----------|-------------------|-------------------|
 2|Наталья  | 1984-11-12|2021-03-10 19:13:38|2021-03-10 19:13:38|
 3|Александр| 1985-05-20|2021-03-10 19:13:38|2021-03-10 19:13:38|
 4|Сергей   | 1988-02-14|2021-03-10 19:13:38|2021-03-10 19:13:38|
 5|Иван     | 1998-01-12|2021-03-10 19:13:38|2021-03-10 19:13:38|
 6|Мария    | 1992-08-29|2021-03-10 19:13:38|2021-03-10 19:13:38|
 
 SELECT id, name, birthday_at, created_at, updated_at FROM sample.users;
-- Результат
id|name    |birthday_at|created_at         |updated_at         |
--|--------|-----------|-------------------|-------------------|
 1|Геннадий| 1990-10-05|2021-03-06 18:19:23|2021-03-06 18:19:23|
 
 
 
-- 2. Создайте представление, которое выводит название name товарной позиции из таблицы products 
-- и соответствующее название каталога name из таблицы catalogs.
 
CREATE OR REPLACE VIEW products_catalogs AS
	SELECT
		p.name AS product,
    	c.name AS catalog
	FROM products AS p 
	JOIN catalogs AS c ON p.catalog_id=c.id;

SELECT product,catalog FROM products_catalogs;
-- Результат
product                |catalog          |
-----------------------|-----------------|
Intel Core i3-8100     |Процессоры       |
Intel Core i5-7400     |Процессоры       |
AMD FX-8320E           |Процессоры       |
AMD FX-8320            |Процессоры       |
ASUS ROG MAXIMUS X HERO|Материнские платы|
Gigabyte H310M S2H     |Материнские платы|
MSI B250M GAMING PRO   |Материнские платы|

-- 3. Пусть имеется таблица с календарным полем created_at. В ней размещены разряженые календарные 
-- записи за август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. Составьте запрос, 
-- который выводит полный список дат за август, выставляя в соседнем поле значение 1, если дата 
-- присутствует в исходном таблице и 0, если она отсутствует.

DROP TABLE IF EXISTS posts;
CREATE TABLE posts(
	id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    created_at DATE NOT NULL
    );

INSERT INTO posts VALUES
	(NULL, 'Запись №1', '2018-08-01'),
	(NULL, 'Запись №2', '2018-08-04'),
    (NULL, 'Запись №3', '2018-08-16'),
    (NULL, 'Запись №4', '2018-08-17');
    
SELECT * FROM posts;
-- Результат
id|name     |created_at|
--|---------|----------|
 1|Запись №1|2018-08-01|
 2|Запись №2|2018-08-04|
 3|Запись №3|2018-08-16|
 4|Запись №4|2018-08-17|

CREATE TEMPORARY TABLE last_days(
day INT
);

INSERT INTO last_days VALUES
(0),(1),(2),(3),(4),(5),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30);

SELECT
	DATE (DATE('2018-08-31') - INTERVAL l.day DAY) AS day,
    NOT ISNULL(p.name) AS order_exist
		FROM last_days AS l
			LEFT JOIN posts AS p
				ON DATE(DATE('2018-08-31') -INTERVAL l.day DAY) = p.created_at
ORDER BY day;

-- Результат
day       |order_exist|
----------|-----------|
2018-08-01|          1|
2018-08-02|          0|
2018-08-03|          0|
2018-08-04|          1|
2018-08-05|          0|
2018-08-06|          0|
2018-08-07|          0|
2018-08-08|          0|
2018-08-09|          0|
2018-08-10|          0|
2018-08-11|          0|
2018-08-12|          0|
2018-08-13|          0|
2018-08-14|          0|
2018-08-15|          0|
2018-08-16|          1|
2018-08-17|          1|
2018-08-18|          0|
2018-08-19|          0|
2018-08-20|          0|
2018-08-21|          0|
2018-08-22|          0|
2018-08-23|          0|
2018-08-24|          0|
2018-08-26|          0|
2018-08-27|          0|
2018-08-28|          0|
2018-08-29|          0|
2018-08-30|          0|
2018-08-31|          0|

